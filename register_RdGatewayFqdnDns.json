{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "dnsLabelPrefix": {
      "type": "string",
      "metadata": {
        "description": "Unique DNS prefix for the RD Gateway FQDN. The FQDN will look something like '<dnsLabelPrefix>.<existingDomainName>'. For example johndns1 will result in the following RDWEB Access URL:  https://johndns1.contoso.com/RDWeb"
      }
    },
    "existingVnetRG": {
      "type": "string",
      "metadata": {
          "description": "Name of the Resource Group that contains the existing Virtual Network resource"
      }
    },
    "existingVnetName": {
      "type": "string",
      "metadata": {
        "description": "Name of the Virtual Network that contains the AD domain. For example johnvnet1"
      }
    },
    "existingSubnetName": {
      "type": "string",
      "metadata": {
        "description": "The Subnet name; it is recommended to have a dedicated subnet for the RDS Farm. For example johnsubnet1"
      }
    },
    "existingDomainName": {
      "type": "string",
      "metadata": {
        "description": "Name of the Active Directory domain. For example contoso.com"
      }
    },
    "existingAdminUserName": {
      "type": "string",
      "metadata": {
        "description": "The name of the administrator of the new VM and the domain. Exclusion list: 'administrator'. For example: johnadmin"
      }
    },
    "existingAdminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The password for the administrator account of the new VM and the domain"
      }
    },
    "existingDnsServer": {
      "type": "string",
      "metadata": {
        "description": "Name of the DNS Server; required for adding the DNS entries for the Connection Brokers' Client Access Name"
      }
    }
  },
    "variables": {
        "subnet-id": "[concat(resourceId(parameters('existingVnetRG'),'Microsoft.Network/virtualNetworks',parameters('existingVnetName')),'/subnets/',parameters('existingSubnetName'))]"
    },
    "resources": [
        {
        "apiVersion": "2015-06-15",
        "type": "Microsoft.Network/loadBalancers",
        "name": "myloadBalancer",
        "location": "[resourceGroup().location]",
        "dependsOn": [],
        "properties": {
            "frontendIPConfigurations": [
            {
                "name": "LBFE",
                "properties": {
                "subnet": {
                    "id": "[variables('subnet-id')]"
                },
                "privateIPAllocationMethod": "Dynamic"
                }
            }
            ],
            "backendAddressPools": [
            {
                "name": "LBBAP"
            }
            ],
            "loadBalancingRules": [
            {
                "name": "https",
                "properties": {
                "frontendIPConfiguration": {
                    "id": "[concat(resourceId('Microsoft.Network/loadBalancers','loadbalancer'),'/frontendIPConfigurations/LBFE')]"
                },
                "backendAddressPool": {
                    "id": "[concat(resourceId('Microsoft.Network/loadBalancers','loadbalancer'),'/backendAddressPools/LBBAP')]"
                },
                "protocol": "Tcp",
                "frontendPort": 443,
                "backendPort": 443,
                "enableFloatingIP": false,
                "idleTimeoutInMinutes": 5,
                "loadDistribution": "SourceIPProtocol",
                "probe": {
                    "id": "[concat(resourceId('Microsoft.Network/loadBalancers','loadbalancer'),'/probes/httpsProbe')]"
                }
                }
            },
            {
                "name": "udp",
                "properties": {
                "frontendIPConfiguration": {
                    "id": "[concat(resourceId('Microsoft.Network/loadBalancers','loadbalancer'),'/frontendIPConfigurations/LBFE')]"
                },
                "backendAddressPool": {
                    "id": "[concat(resourceId('Microsoft.Network/loadBalancers','loadbalancer'),'/backendAddressPools/LBBAP')]"
                },
                "protocol": "Udp",
                "frontendPort": 3391,
                "backendPort": 3391,
                "enableFloatingIP": false,
                "idleTimeoutInMinutes": 5,
                "loadDistribution": "SourceIPProtocol",
                "probe": {
                    "id": "[concat(resourceId('Microsoft.Network/loadBalancers','loadbalancer'),'/probes/udpProbe')]"
                }
                }
            }
            ],
            "probes": [
            {
                "name": "httpsProbe",
                "properties": {
                "protocol": "Tcp",
                "port": 443,
                "intervalInSeconds": 5,
                "numberOfProbes": 2
                }
            },
            {
                "name": "udpProbe",
                "properties": {
                "protocol": "Tcp",
                "port": 3391,
                "intervalInSeconds": 5,
                "numberOfProbes": 2
                }
            }
            ]
            }
        }
    ],
    "outputs": {
        "fqdn": {
          "type": "string",
          "value": "[concat(parameters('dnsLabelPrefix'), '.', parameters('existingDomainName'))]"
        },
        "loadBalancerIPAddress": {
          "type": "string",
          "value": "[reference('loadbalancer').frontendIPConfigurations[0].privateIPAddress]"
        }
    }
}