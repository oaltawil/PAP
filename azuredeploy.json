{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "dnsLabelPrefix": {
      "type": "string",
      "metadata": {
        "description": "Unique DNS prefix for the RD Gateway FQDN. The FQDN will look something like '<dnsLabelPrefix>.<existingDomainName>'. For example johndns1 will result in the following RDWEB Access URL:  https://johndns1.contoso.com/RDWeb"
      }
    },
    "existingVnetRG": {
      "type": "string",
      "metadata": {
          "description": "Name of the Resource Group that contains the existing Virtual Network resource"
      }
    },
    "existingVnetName": {
      "type": "string",
      "metadata": {
        "description": "Name of the Virtual Network that contains the AD domain. For example johnvnet1"
      }
    },
    "existingSubnetName": {
      "type": "string",
      "metadata": {
        "description": "The Subnet name; it is recommended to have a dedicated subnet for the RDS Farm. For example johnsubnet1"
      }
    },
    "existingDomainName": {
      "type": "string",
      "metadata": {
        "description": "Name of the Active Directory domain. For example contoso.com"
      }
    },
    "existingAdminUserName": {
      "type": "string",
      "metadata": {
        "description": "The name of the administrator of the new VM and the domain. Exclusion list: 'administrator'. For example: johnadmin"
      }
    },
    "existingAdminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The password for the administrator account of the new VM and the domain"
      }
    },
    "osDiskType":{
      "type": "string",
      "metadata": {
        "description": "Storage Account Type of the Virtual Machine's Managed Disks"
      },
      "defaultValue": "Standard_LRS"
    },
    "rdshVmSize": {
      "type": "string",
      "metadata": {
        "description": "Size of the RD Session Host VMs"
      },
      "defaultValue": "Standard_D2_v3"
    },
    "gatewayVmSize": {
      "type": "string",
      "metadata": {
        "description": "Size of the RD Gateway VMs"
      },
      "defaultValue": "Standard_D2_v3"
    },
    "brokerVmSize": {
      "type": "string",
      "metadata": {
        "description": "Size of the RD Broker VMs"
      },
      "defaultValue": "Standard_D2_v3"
    },
    "sqlServerName": {
      "type": "string",
      "metadata": {
        "description": "Name of the SQL Server that will host the HA Connection Broker Db"
      }
    },
    "sqlServerAdministratorLogin": {
        "type": "string",
        "metadata": {
          "description": "Name of the SQL Server Administrator"
        }
    },
    "sqlServerAdministratorPassword": {
        "type": "securestring",
        "metadata": {
          "description": "Password of the SQL Server Administrator"
        }
    },
    "databaseName": {
        "type": "string",
        "metadata": {
          "description": "Name of the SQL Database that will be used by the Highly-Available Connection Broker Role"
        }
    },
    "databaseTier": {
        "type": "string",
        "defaultValue": "Standard",
        "metadata": {
          "description": "SQL Database Tier"
        }
    },
    "databaseSkuName": {
        "type": "string",
        "defaultValue": "S2",
        "metadata": {
          "description": "SQL Database SKU Name"
        }
    },
    "clientAccessName": {
      "type": "string",
      "metadata": {
        "description": "Common name of the Connection Brokers (two DNS entries will be added for this DNS name; one for each Connection Broker IP Address)"
      }
    },
    "existingDnsServer": {
      "type": "string",
      "metadata": {
        "description": "Name of the DNS Server; required for adding the DNS entries for the Connection Brokers' Client Access Name"
      }
    },
    "vaultName": {
      "type": "string",
      "metadata": {
          "description": "Name of the Azure Key Vault where the certificate is stored"
      }
    },
    "certificateName": {
      "type": "string",
      "metadata": {
          "description": "Name of the Certificate in the Azure Key Vault"
      }
    },
    "applicationId": {
      "type": "string",
      "metadata": {
          "description": "AD Application Id used to access the certificate"
      }
    },
    "applicationPassword": {
      "type": "securestring",
      "metadata": {
          "description": "AD Application Password"
      }
    },
    "tenantId": {
      "type": "string",
      "metadata": {
          "description": "Tenant Id that contains the Secure Principal Account"
      }
    },
    "_artifactsLocation": {
      "type": "string",
      "metadata": {
        "description": "Base URI where artifacts required by this template are located"
      },
      "defaultValue": "https://raw.githubusercontent.com/oaltawil/PAP/master"
    }
  },
  "variables": {
    "subnet-id": "[concat(resourceId(parameters('existingVnetRG'),'Microsoft.Network/virtualNetworks',parameters('existingVnetName')),'/subnets/',parameters('existingSubnetName'))]",
    "networkNameSuffix": "-nic",
    "vmPrefix": "",
    "numberOfRdshInstances": 2,
    "rdshVmName": "[concat(variables('vmPrefix'), 'rdsh-')]",
    "brokerVmName": "[concat(variables('vmPrefix'), 'rdcb-')]",
    "primaryBrokerVmName": "[concat(variables('brokerVmName'), '01')]",
    "primaryBrokerNicName": "[concat(variables('primaryBrokerVmName'), variables('networkNameSuffix'))]",
    "secondaryBrokerVmName": "[concat(variables('brokerVmName'), '02')]",
    "secondaryBrokerNicName": "[concat(variables('secondaryBrokerVmName'),variables('networkNameSuffix'))]",
    "gatewayVmName": "[concat(variables('vmPrefix'), 'rdgw-')]",
    "primaryGatewayVmName": "[concat(variables('gatewayVmName'), '01')]",
    "primaryGatewayNicName": "[concat(variables('primaryGatewayVmName'),variables('networkNameSuffix'))]",
    "secondaryGatewayVmName": "[concat(variables('gatewayVmName'), '02')]",
    "secondaryGatewayNicName": "[concat(variables('secondaryGatewayVmName'),variables('networkNameSuffix'))]",
    "databaseEnableATP": false,
    "databaseAllowAzureIps": true,
    "dbConnectionStringToken1": "DRIVER=SQL Server Native Client 11.0;Server=tcp:",
    "dbConnectionStringToken3": "[concat(',1433;Database=', parameters('databaseName'), ';Uid=', parameters('sqlServerAdministratorLogin'), '@', parameters('sqlServerName'), ';Pwd=', parameters('sqlServerAdministratorPassword'), ';Encrypt=yes;TrustServerCertificate=no;Connection Timeout=30;')]",
    "sqlClientUrl": "http://go.microsoft.com/fwlink/?LinkID=239648&clcid=0x409",
    "RdcbHa_P": {
      "broker": "[concat(' -existingBroker ', variables('primaryBrokerVmName'))]",
      "domain": "[concat(' -domainName \"', parameters('existingDomainName'),'\"')]",
      "user": "[concat(' -username \"', parameters('existingAdminUsername'),'\"')]",
      "pwd": "[concat(' -password \"', parameters('existingAdminPassword'),'\"')]",
      "can": "[concat(' -clientAccessName \"', parameters('clientAccessName'), '\"')]",
      "sqlnclient": "[concat(' -sqlClientUrl \"', variables('sqlClientUrl'), '\"')]",
      "dnsserver": "[concat(' -dnsServer ', parameters('existingDnsServer'))]",
      "sqlserver": "[concat(' -sqlServer \"\"')]",
      "connstr": "[concat(' -primaryDbConnectionString \"', variables('dbConnectionStringToken1'))]"
    },
    "RdcbHa_ScriptParameters": "[concat(variables('RdcbHa_P').broker, variables('RdcbHa_P').domain, variables('RdcbHa_P').user, variables('RdcbHa_P').pwd, variables('RdcbHa_P').can, variables('RdcbHa_P').sqlnclient, variables('RdcbHa_P').dnsserver, variables('RdcbHa_P').sqlserver, variables('RdcbHa_P').connstr)]",
    "RdcbHa_ScriptLocation": "[concat(parameters('_artifactsLocation'), '/Scripts')]",
    "RdcbHa_ScriptFileName": "RdcbHaPostConfig.ps1",
    "UpdateRDSCert_P": {
      "appid": "[concat(' -appId ', parameters('applicationId'))]",
      "apppassword": "[concat(' -appPassword ', parameters('applicationPassword'))]",
      "tenantid": "[concat(' -tenantId ', parameters('tenantId'))]",
      "vault": "[concat(' -vaultName ', parameters('vaultName'))]",
      "secret": "[concat(' -secretName ', parameters('certificateName'))]",
      "adminUsername": "[concat(' -adminUsername ', parameters('existingAdminUsername'))]",
      "adminPassword": "[concat(' -adminPassword ', parameters('existingAdminPassword'))]",
      "adDomainName": "[concat(' -adDomainName ', parameters('existingDomainName'))]"
    },
    "UpdateRDSCert_ScriptParameters": "[concat(variables('UpdateRDSCert_P').appid, variables('UpdateRDSCert_P').apppassword, variables('UpdateRDSCert_P').tenantid, variables('UpdateRDSCert_P').vault, variables('UpdateRDSCert_P').secret, variables('UpdateRDSCert_P').adminUsername, variables('UpdateRDSCert_P').adminPassword, variables('UpdateRDSCert_P').adDomainName)]",
    "UpdateRDSCert_ScriptFolder": "Scripts",
    "UpdateRDSCert_ScriptFileName": "UpdateRDSCertificate.ps1"
  },
  "resources": [
    {
      "apiVersion": "2018-06-01",
      "type": "Microsoft.Compute/availabilitySets",
      "name": "gw-availabilityset",
      "location": "[resourceGroup().location]",
      "properties": {
        "PlatformUpdateDomainCount": 20,
        "PlatformFaultDomainCount": 2
      },
      "sku": {
          "name": "Aligned"
      }
    },
    {
      "apiVersion": "2018-06-01",
      "type": "Microsoft.Compute/availabilitySets",
      "name": "cb-availabilityset",
      "location": "[resourceGroup().location]",
      "properties": {
        "PlatformUpdateDomainCount": 20,
        "PlatformFaultDomainCount": 2
      },
      "sku": {
          "name": "Aligned"
      }
    },
    {
      "apiVersion": "2018-06-01",
      "type": "Microsoft.Compute/availabilitySets",
      "name": "rdsh-availabilityset",
      "location": "[resourceGroup().location]",
      "properties": {
        "PlatformUpdateDomainCount": 20,
        "PlatformFaultDomainCount": 2
      },
      "sku": {
          "name": "Aligned"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/loadBalancers",
      "name": "loadBalancer",
      "location": "[resourceGroup().location]",
      "dependsOn": [],
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "LBFE",
            "properties": {
              "subnet": {
                "id": "[variables('subnet-id')]"
              },
              "privateIPAllocationMethod": "Dynamic"
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "LBBAP"
          }
        ],
        "loadBalancingRules": [
          {
            "name": "https",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers','loadBalancer'),'/frontendIPConfigurations/LBFE')]"
              },
              "backendAddressPool": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers','loadBalancer'),'/backendAddressPools/LBBAP')]"
              },
              "protocol": "Tcp",
              "frontendPort": 443,
              "backendPort": 443,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 5,
              "loadDistribution": "SourceIPProtocol",
              "probe": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers','loadBalancer'),'/probes/httpsProbe')]"
              }
            }
          },
          {
            "name": "udp",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers','loadBalancer'),'/frontendIPConfigurations/LBFE')]"
              },
              "backendAddressPool": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers','loadBalancer'),'/backendAddressPools/LBBAP')]"
              },
              "protocol": "Udp",
              "frontendPort": 3391,
              "backendPort": 3391,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 5,
              "loadDistribution": "SourceIPProtocol",
              "probe": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers','loadBalancer'),'/probes/udpProbe')]"
              }
            }
          }
        ],
        "probes": [
          {
            "name": "httpsProbe",
            "properties": {
              "protocol": "Tcp",
              "port": 443,
              "intervalInSeconds": 5,
              "numberOfProbes": 2
            }
          },
          {
            "name": "udpProbe",
            "properties": {
              "protocol": "Tcp",
              "port": 3391,
              "intervalInSeconds": 5,
              "numberOfProbes": 2
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('gatewayVmName'), padLeft(add(copyIndex(), 1), 2, '0'), variables('networkNameSuffix'))]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "Microsoft.Network/loadBalancers/loadBalancer"
      ],
      "copy": {
        "name": "gw-nic-loop",
        "count": 2
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('subnet-id')]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[concat(resourceId('Microsoft.Network/loadBalancers','loadBalancer'),'/backendAddressPools/LBBAP')]"
                }
              ]
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('primaryBrokerNicName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "Microsoft.Network/loadBalancers/loadBalancer"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('subnet-id')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('rdshVmName'), padLeft(add(copyindex(), 1), 2, '0'), variables('networkNameSuffix'))]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "rdsh-nic-loop",
        "count": "[variables('numberOfRdshInstances')]"
      },
      "dependsOn": [
        "Microsoft.Network/loadBalancers/loadBalancer"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('subnet-id')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2018-06-01",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('primaryGatewayVmName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Compute/availabilitySets', 'gw-availabilityset')]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('primaryGatewayNicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('gatewayVmSize')]"
        },
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', 'gw-availabilityset')]"
        },
        "osProfile": {
          "computerName": "[variables('primaryGatewayVmName')]",
          "adminUsername": "[parameters('existingAdminUserName')]",
          "adminPassword": "[parameters('existingAdminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "2016-Datacenter",
            "version": "latest"
          },
          "osDisk": {
            "name": "[concat(variables('primaryGatewayVmName'), '_OSDisk')]",
            "managedDisk": {
              "storageAccountType": "[parameters('osDiskType')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('primaryGatewayNicName'))]"
            }
          ]
        }
      },
      "resources": [
        {
          "apiVersion": "2018-06-01",
          "type": "Microsoft.Compute/virtualMachines/extensions",
          "name": "[concat(variables('primaryGatewayVmName'), '/gateway')]",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[resourceId('Microsoft.Compute/virtualMachines', variables('primaryGatewayVmName'))]"
          ],
          "properties": {
            "publisher": "Microsoft.Powershell",
            "type": "DSC",
            "typeHandlerVersion": "2.76",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "ModulesUrl": "[concat(parameters('_artifactsLocation'),'/DSC/Configuration.zip')]",
              "ConfigurationFunction": "Configuration.ps1\\Gateway",
              "Properties": {
                "DomainName": "[parameters('existingDomainName')]",
                "AdminCreds": {
                  "UserName": "[parameters('existingAdminUserName')]",
                  "Password": "PrivateSettingsRef:AdminPassword"
                }
              }
            },
            "protectedSettings": {
              "Items": {
                "AdminPassword": "[parameters('existingAdminPassword')]"
              }
            }
          }
        },
        {
          "name": "[concat(variables('primaryGatewayVMName'),'/RegisterRdGatwayFqdnDns.ps1')]",
          "type": "Microsoft.Compute/virtualMachines/extensions",
          "location": "[resourceGroup().location]",
          "apiVersion": "2018-06-01",
          "dependsOn": [
            "[resourceId('Microsoft.Compute/virtualMachines', variables('primaryGatewayVmName'))]",
            "[concat('Microsoft.Compute/virtualMachines/',variables('primaryGatewayVmName'),'/extensions/gateway')]",
            "Microsoft.Network/loadBalancers/loadBalancer"
          ],
          "properties": {
            "publisher": "Microsoft.Compute",
            "type": "CustomScriptExtension",
            "typeHandlerVersion": "1.8",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "fileUris": [
                "[concat(parameters('_artifactsLocation'),'/Scripts/RegisterRdGatwayFqdnDns.ps1')]"
              ]
            },
            "protectedSettings": {
              "commandToExecute": "[Concat('powershell.exe -ExecutionPolicy Unrestricted -File', ' ', 'RegisterRdGatwayFqdnDns.ps1',' ','-dnsLabelPrefix \"', parameters('dnsLabelPrefix'), '\" ', '-existingDomainName \"',parameters('existingDomainName'), '\" ', '-existingAdminUserName \"', parameters('existingAdminUsername'), '\" ', '-existingAdminPassword \"', parameters('existingAdminPassword'), '\" ', '-existingDnsServer \"', parameters('existingDnsServer'),'\" ','-loadBalancerIP \"', reference('loadBalancer').frontendIPConfigurations[0].properties.privateIPAddress, '\"')]"
            }
          }
        }
      ]
    },
    {
      "apiVersion": "2018-06-01",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(variables('rdshVmName'), padLeft(add(copyindex(), 1), 2, '0'))]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "rdsh-vm-loop",
        "count": "[variables('numberOfRdshInstances')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Compute/availabilitySets', 'rdsh-availabilityset')]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('rdshVmName'), padLeft(add(copyindex(), 1), 2, '0'), variables('networkNameSuffix'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('rdshVmSize')]"
        },
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', 'rdsh-availabilityset')]"
        },
        "osProfile": {
          "computerName": "[concat(variables('rdshVmName'), padLeft(add(copyindex(), 1), 2, '0'))]",
          "adminUsername": "[parameters('existingAdminUserName')]",
          "adminPassword": "[parameters('existingAdminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "2016-Datacenter",
            "version": "latest"
          },
          "osDisk": {
            "name": "[concat(variables('rdshVmName'), padLeft(add(copyindex(), 1), 2, '0'), '_OSDisk')]",
            "managedDisk": {
              "storageAccountType": "[parameters('osDiskType')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('rdshVmName'), padLeft(add(copyindex(), 1), 2, '0'), variables('networkNameSuffix')))]"
            }
          ]
        }
      },
      "resources": [
        {
          "apiVersion": "2018-06-01",
          "type": "Microsoft.Compute/virtualMachines/extensions",
          "name": "[concat(variables('rdshVmName'), padLeft(add(copyindex(), 1), 2, '0'),'/sessionhost')]",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[resourceId('Microsoft.Compute/virtualMachines', concat(variables('rdshVmName'), padLeft(add(copyindex(), 1), 2, '0')))]"
          ],
          "properties": {
            "publisher": "Microsoft.Powershell",
            "type": "DSC",
            "typeHandlerVersion": "2.76",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "ModulesUrl": "[concat(parameters('_artifactsLocation'),'/DSC/Configuration.zip')]",
              "ConfigurationFunction": "Configuration.ps1\\SessionHost",
              "Properties": {
                "DomainName": "[parameters('existingDomainName')]",
                "AdminCreds": {
                  "UserName": "[parameters('existingAdminUserName')]",
                  "Password": "PrivateSettingsRef:AdminPassword"
                }
              }
            },
            "protectedSettings": {
              "Items": {
                "AdminPassword": "[parameters('existingAdminPassword')]"
              }
            }
          }
        }
      ]
    },
    {
      "apiVersion": "2018-06-01",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('primaryBrokerVmName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Compute/availabilitySets', 'cb-availabilityset')]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('primaryBrokerNicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('brokerVmSize')]"
        },
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', 'cb-availabilityset')]"
        },
        "osProfile": {
          "computerName": "[variables('primaryBrokerVmName')]",
          "adminUsername": "[parameters('existingAdminUserName')]",
          "adminPassword": "[parameters('existingAdminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "2016-Datacenter",
            "version": "latest"
          },
          "osDisk": {
            "name": "[concat(variables('primaryBrokerVmName'), '_OSDisk')]",
            "managedDisk": {
              "storageAccountType": "[parameters('osDiskType')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('primaryBrokerNicName'))]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('primaryBrokerVmName'),'/rdsdeployment')]",
      "apiVersion": "2018-06-01",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines', variables('primaryBrokerVmName'))]",
        "[concat('Microsoft.Compute/virtualMachines/',variables('primaryGatewayVmName'),'/extensions/RegisterRdGatwayFqdnDns.ps1')]",
        "rdsh-vm-loop"
      ],
      "properties": {
        "publisher": "Microsoft.Powershell",
        "type": "DSC",
        "typeHandlerVersion": "2.76",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "modulesUrl": "[concat(parameters('_artifactsLocation'),'/DSC/Configuration.zip')]",
          "configurationFunction": "Configuration.ps1\\RDSDeployment",
          "Properties": {
            "adminCreds": {
              "UserName": "[parameters('existingAdminUserName')]",
              "Password": "PrivateSettingsRef:adminPassword"
            },
            "connectionBroker": "[concat(variables('primaryBrokerVmName'), '.', parameters('existingDomainName'))]",
            "domainName": "[parameters('existingDomainName')]",
            "externalfqdn": "[concat(parameters('dnsLabelPrefix'), '.', parameters('existingDomainName'))]",
            "numberOfRdshInstances": "[variables('numberOfRdshInstances')]",
            "sessionHostNamingPrefix": "[variables('rdshVmName')]",
            "webAccessServer": "[concat(variables('primaryGatewayVmName'), '.', parameters('existingDomainName'))]"
          }
        },
        "protectedSettings": {
          "Items": {
            "adminPassword": "[parameters('existingAdminPassword')]"
          }
        }
      }
    },
    {
      "apiVersion": "2018-06-01",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('secondaryGatewayVmName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Compute/availabilitySets', 'gw-availabilityset')]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('secondaryGatewayNicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('gatewayVmSize')]"
        },
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', 'gw-availabilityset')]"
        },
        "osProfile": {
          "computerName": "[variables('secondaryGatewayVmName')]",
          "adminUsername": "[parameters('existingAdminUserName')]",
          "adminPassword": "[parameters('existingAdminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "2016-Datacenter",
            "version": "latest"
          },
          "osDisk": {
            "name": "[concat(variables('secondaryGatewayVmName'), '_OSDisk')]",
            "managedDisk": {
              "storageAccountType": "[parameters('osDiskType')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('secondaryGatewayNicName'))]"
            }
          ]
        }
      },
      "resources": [
        {
          "apiVersion": "2018-06-01",
          "type": "Microsoft.Compute/virtualMachines/extensions",
          "name": "[concat(variables('secondaryGatewayVmName'), '/gateway')]",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[resourceId('Microsoft.Compute/virtualMachines', variables('secondaryGatewayVmName'))]"
            ],
          "properties": {
            "publisher": "Microsoft.Powershell",
            "type": "DSC",
            "typeHandlerVersion": "2.76",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "ModulesUrl": "[concat(parameters('_artifactsLocation'),'/DSC/Configuration.zip')]",
              "ConfigurationFunction": "Configuration.ps1\\Gateway",
              "Properties": {
                "DomainName": "[parameters('existingDomainName')]",
                "AdminCreds": {
                  "UserName": "[parameters('existingAdminUserName')]",
                  "Password": "PrivateSettingsRef:AdminPassword"
                }
              }
            },
            "protectedSettings": {
              "Items": {
                "AdminPassword": "[parameters('existingAdminPassword')]"
              }
            }
          }
        },
        {
          "name": "[concat(variables('secondaryGatewayVMName'),'/WebAndGwFarmAdd_PostConfig1.1')]",
          "type": "Microsoft.Compute/virtualMachines/extensions",
          "location": "[resourceGroup().location]",
          "apiVersion": "2018-06-01",
          "dependsOn": [
            "[resourceId('Microsoft.Compute/virtualMachines', variables('secondaryGatewayVmName'))]",
            "[concat('Microsoft.Compute/virtualMachines/', variables('secondaryGatewayVMName'), '/extensions/gateway')]",
            "[concat('Microsoft.Compute/virtualMachines/', variables('primaryBrokerVmName'), '/extensions/rdsdeployment')]"
          ],
          "properties": {
            "publisher": "Microsoft.Compute",
            "type": "CustomScriptExtension",
            "typeHandlerVersion": "1.8",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "fileUris": [
                "[concat(parameters('_artifactsLocation'),'/Scripts/WebAndGwFarmAdd_PostConfig1.1.ps1')]"
              ]
            },
            "protectedSettings": {
              "Items": {
                "AdminPassword": "[parameters('existingAdminPassword')]"
              },
              "commandToExecute": "[Concat('powershell.exe -ExecutionPolicy Unrestricted -File', ' ', 'WebAndGwFarmAdd_PostConfig1.1.ps1',' ','-username \"',parameters('existingAdminUserName'),'\" ', '-password \"',parameters('existingAdminPassword'),'\" ','-BrokerServer \"',variables('primaryBrokerVmName'),'.',parameters('existingDomainName'),'\" ','-externalFqdn \"', parameters('dnsLabelPrefix'), '.', parameters('existingDomainName'),'\" ','-Domainname \"',parameters('existingDomainName'),'\" ','-numberofwebServers 1',' -ServerName ', variables('gatewayVmName'), ' -vmNameStartIndex 2')]"
            }
          }
        }
      ]
    },
    {
      "apiVersion": "2015-05-01-preview",
      "location": "East US",
      "name": "[parameters('sqlServerName')]",
      "properties": {
          "AdministratorLogin": "[parameters('sqlServerAdministratorLogin')]",
          "AdministratorLoginPassword": "[parameters('sqlServerAdministratorPassword')]",
          "version": "12.0"
      },
      "resources": [
          {
              "apiVersion": "2017-10-01-preview",
              "dependsOn": [
                  "[concat('Microsoft.Sql/servers/', parameters('sqlServerName'))]"
              ],
              "location": "East US",
              "name": "[parameters('databaseName')]",
              "properties": {
                  "collation": "SQL_Latin1_General_CP1_CI_AS",
                  "maxSizeBytes": 268435456000,
                  "sampleName": "",
                  "zoneRedundant": false,
                  "licenseType": ""
              },
              "sku": {
                  "name": "[parameters('databaseSkuName')]",
                  "tier": "[parameters('databaseTier')]"
              },
              "type": "databases"
          },
          {
              "condition": "[variables('databaseAllowAzureIps')]",
              "apiVersion": "2014-04-01-preview",
              "dependsOn": [
                  "[concat('Microsoft.Sql/servers/', parameters('sqlServerName'))]"
              ],
              "location": "East US",
              "name": "AllowAllWindowsAzureIps",
              "properties": {
                  "endIpAddress": "0.0.0.0",
                  "startIpAddress": "0.0.0.0"
              },
              "type": "firewallrules"
          },
          {
              "condition": "[variables('databaseEnableATP')]",
              "apiVersion": "2017-03-01-preview",
              "type": "securityAlertPolicies",
              "name": "Default",
              "dependsOn": [
                  "[concat('Microsoft.Sql/servers/', parameters('sqlServerName'))]",
                  "[concat('Microsoft.Sql/servers/', parameters('sqlServerName'), '/databases/', parameters('databaseName'))]"
              ],
              "properties": {
                  "state": "Enabled",
                  "disabledAlerts": [],
                  "emailAddresses": [],
                  "emailAccountAdmins": true
              }
          }
      ],
      "type": "Microsoft.Sql/servers"
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('secondaryBrokerNicName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('subnet-id')]"  
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2018-06-01",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('secondaryBrokerVmName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Compute/availabilitySets', 'cb-availabilityset')]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('secondaryBrokerNicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('brokerVmSize')]"
        },
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', 'cb-availabilityset')]"
        },
        "osProfile": {
          "computerName": "[variables('secondaryBrokerVmName')]",
          "adminUsername": "[parameters('existingAdminUsername')]",
          "adminPassword": "[parameters('existingAdminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "2016-Datacenter",
            "version": "latest"
          },
          "osDisk": {
            "name": "[concat(variables('secondaryBrokerVmName'), '_OSDisk')]",
            "managedDisk": {
              "storageAccountType": "[parameters('osDiskType')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('secondaryBrokerNicName'))]"
            }
          ]
        }
      }
    },
    {
      "apiVersion": "2018-06-01",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('secondaryBrokerVmName'),'/configuration')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines',variables('secondaryBrokerVmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Powershell",
        "type": "DSC",
        "typeHandlerVersion": "2.76",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "modulesUrl": "[concat(parameters('_artifactsLocation'),'/DSC/Configuration.zip')]",
          "configurationFunction": "Configuration.ps1\\DomainJoin",
          "properties": {
            "domainName": "[parameters('existingDomainName')]",
            "adminCreds": {
              "UserName": "[parameters('existingAdminUsername')]",
              "Password": "PrivateSettingsRef:adminPassword"
            }
          }
        },
        "protectedSettings": {
          "Items": {
            "adminPassword": "[parameters('existingAdminPassword')]"
          }
        }
      }
    },
    {
      "apiVersion": "2018-06-01",
      "name": "[concat(variables('secondaryBrokerVmName'),'/ha-broker-configuration')]",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines',variables('secondaryBrokerVmName'))]",
        "[concat('Microsoft.Compute/virtualMachines/', variables('secondaryGatewayVMName'),'/extensions/WebAndGwFarmAdd_PostConfig1.1')]",
        "[concat('Microsoft.Sql/servers/',parameters('sqlServerName'),'/databases/',parameters('databaseName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Compute",
        "type": "CustomScriptExtension",
        "typeHandlerVersion": "1.8",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "fileUris": [
            "[concat(variables('RdcbHa_ScriptLocation'), '/', variables('RdcbHa_ScriptFileName'))]"
          ]
        },
        "protectedSettings": {
          "commandToExecute": "[concat( 'powershell -noninteractive -executionpolicy bypass -file ', variables('RdcbHa_ScriptFileName'), variables('RdcbHa_ScriptParameters'), reference(parameters('sqlServerName')).fullyQualifiedDomainName, variables('dbConnectionStringToken3'), '\"', ' >> script.log 2>&1' )]"
        }
      }
    },
    {
      "apiVersion": "2018-06-01",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('primaryBrokerVmName'),'/UpdateRDSCert')]",
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines',variables('primaryBrokerVmName'))]",
        "[concat('Microsoft.Compute/virtualMachines/', variables('secondaryBrokerVmName'),'/extensions/ha-broker-configuration')]"
      ],
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "Update RDS Certificate Script"
      },
      "properties": {
        "publisher": "Microsoft.Compute",
        "type": "CustomScriptExtension",
        "typeHandlerVersion": "1.8",
        "autoUpgradeMinorVersion": true,
        "settings": {
            "fileUris": [
                "[concat(parameters('_artifactsLocation'), '/', variables('UpdateRDSCert_ScriptFolder'), '/', variables('UpdateRDSCert_ScriptFileName'))]"
            ]
        },
        "protectedSettings": {
          "commandToExecute": "[concat( 'powershell -noninteractive -executionpolicy bypass -file ', variables('UpdateRDSCert_ScriptFileName'), variables('UpdateRDSCert_ScriptParameters'), ' >> script.log 2>&1' )]"
        }
      }
    }
  ],
  "outputs": {
    "rdGatewayFqdn": {
      "type": "string",
      "value": "[concat(parameters('dnsLabelPrefix'), '.', parameters('existingDomainName'))]"
    },
    "rdWebUrl": {
      "type": "string",
      "value": "[concat('https://', parameters('dnsLabelPrefix'), '.', parameters('existingDomainName'), '/rdweb')]"
    }
  }
}